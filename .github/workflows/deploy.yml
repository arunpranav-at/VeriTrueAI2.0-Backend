name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'

env:
  PROJECT_ID: veritrueai
  SERVICE: veritrueai-backend
  REGION: us-central1

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛒 Checkout Code
      uses: actions/checkout@v4

    - name: 🔑 Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: ☁️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: 🔧 Configure Docker for Artifact Registry
      run: gcloud auth configure-docker

    - name: 🚀 Deploy to Cloud Run
      run: |
        echo "🚀 Deploying VeriTrueAI Backend to Cloud Run..."
        gcloud run deploy $SERVICE \
          --source . \
          --project $PROJECT_ID \
          --region $REGION \
          --allow-unauthenticated \
          --port 8080 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --timeout 300 \
          --quiet

    - name: 🧪 Test Deployment
      run: |
        echo "🧪 Testing deployment..."
        SERVICE_URL=$(gcloud run services describe $SERVICE --region=$REGION --format='value(status.url)')
        echo "Service URL: $SERVICE_URL"
        
        # Test health endpoint
        curl -f "$SERVICE_URL/health" || exit 1
        echo "✅ Health check passed!"
        
        # Test API docs endpoint
        curl -f "$SERVICE_URL/docs" || exit 1
        echo "✅ API docs accessible!"

    - name: 📊 Get Service Info
      run: |
        echo "📊 Deployment Summary:"
        SERVICE_URL=$(gcloud run services describe $SERVICE --region=$REGION --format='value(status.url)')
        echo "🌐 Live URL: $SERVICE_URL"
        echo "📚 API Docs: $SERVICE_URL/docs"
        echo "❤️ Health Check: $SERVICE_URL/health"
        
        # Get revision info
        REVISION=$(gcloud run services describe $SERVICE --region=$REGION --format='value(status.latestReadyRevisionName)')
        echo "🔄 Latest Revision: $REVISION"